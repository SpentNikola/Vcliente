import vk_api as api
import time

file = open('config.txt', 'r+')
TOKEN = file.read()
session = api.VkApi(token=TOKEN)
vk = session.get_api()


def menu():
    print('[1] –î—Ä—É–∑—å—è')
    print('[2] –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    print('[3] –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è')
    menu_input = int(input())
    if menu_input == 1:
        message()
    if menu_input == 2:
        settings()
    if menu_input == 3:
        delay()

def settings():
    postfix = ''
    f = open('settings.txt', 'r')
    set_fr = int(f.readline())
    set_mes = int(f.readline())
    set_order = f.readline()
    old1 = str(set_fr)
    old2 = str(set_mes)
    unread = ''
    old3 = set_order
    f.close()
    data = vk.friends.get(order=set_order, count=set_fr, fields='nickname, online', name_case='nom')
    if set_order == 'hints':
        o = '–ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏'
    if set_order == 'name':
        o = '–ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É'
    print('''–í—ã –≤–æ—à–ª–∏ –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫. 
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π –≤ –º–µ–Ω—é ‚Äì ''', set_fr, "–ò–∑–º–µ–Ω–∏—Ç—å ‚Äì /set friends, –º–∞–∫—Å–∏–º—É–º ‚Äì " + str(data['count']))
    print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ ‚Äì ', set_mes, "–ò–∑–º–µ–Ω–∏—Ç—å ‚Äì /set messages, –º–∞–∫—Å–∏–º—É–º - 200")
    print('–†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥—Ä—É–∑–µ–π ‚Äì ', o + '. –ò–∑–º–µ–Ω–∏—Ç—å ‚Äì /set order (1 - –ü–æ –≤–∞–∂–Ω–æ—Å—Ç–∏, 2 - –ø–æ –∏–º–µ–Ω–∏)')
    print('/exit —á—Ç–æ–±—ã –≤—ã–π—Ç–∏')
    option = input()
    if option == '/exit':
        menu()
    if option[:12] == '/set friends':
        f = open('settings.txt', 'w')
        set_fr = str(set_fr)
        new_data = set_fr.replace(old1, option[13:])
        if int(new_data) > data['count']:
            print('–ß–∏—Å–ª–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ')
            time.sleep(1)
        else:
            with open('settings.txt', 'w') as f:
                f.write(new_data + '\n')
                f.write(old2 + '\n')
                f.write(old3)
            print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π –≤ –º–µ–Ω—é ‚Äì', new_data)
            message()
    elif option[:13] == '/set messages':
        f = open('settings.txt', 'w')
        set_mes = str(set_mes)
        new_data = set_mes.replace(old2, option[14:])
        with open('settings.txt', 'w') as f:
            f.write(old1 + '\n')
            f.write(new_data + '\n')
            f.write(old3)
        print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ ‚Äì', new_data)
        message()
    elif option[:10] == '/set order':
        f = open('settings.txt', 'w')
        if option[11:] == '1':
            new_data = 'hints'
            o = '–ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏'
        elif option[11:] == '2':
            new_data = 'name'
            o = '–ø–æ –∏–º–µ–Ω–∏'
        else:
            print('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')
        with open('settings.txt', 'w') as f:
            f.write(old1 + '\n')
            f.write(old2 + '\n')
            f.write(new_data)
        print('–†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥—Ä—É–∑–µ–π ‚Äì', o)
        menu()


def message():
    vm_check = False
    postfix = ''
    f = open('settings.txt', 'r')
    set_fr = int(f.readline())
    set_mes = int(f.readline())
    set_order = f.readline()
    old1 = str(set_fr)
    old2 = str(set_mes)
    unread = ''
    i = 0
    old3 = set_order
    f.close()
    global msg
    data = vk.friends.get(order=set_order, count=set_fr, fields='nickname, online', name_case='nom')
    read = vk.messages.getConversations(filter='unread')
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    read = vk.messages.getConversations(filter='unread')
    for i in range(read['unread_count']):
        if read['items'][i]['conversation']['peer']['type'] == 'user':
            try:
                if read['items'][i]['conversation']['unread_count'] != 0:
                    unread_id = str(read['items'][i]['conversation']['peer']['id'])
                    unread = unread + unread_id
            except KeyError:
                i += 1
    # –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
    for i in range(set_fr):
        numb = i + 1
        if str(data['items'][i]['id']) in unread and int(data['items'][i]['online']) == 1:
            print('[' + str(numb) + ']', data['items'][i]['first_name'], data['items'][i]['last_name'] + '‚≠ïÔ∏èÔ∏èüü¢')
        if str(data['items'][i]['id']) in unread:
            print('[' + str(numb) + ']', data['items'][i]['first_name'], data['items'][i]['last_name'] + '‚≠ïÔ∏èÔ∏è')
        if int(data['items'][i]['online']) == 1:
            print('[' + str(numb) + ']', data['items'][i]['first_name'], data['items'][i]['last_name'] + 'üü¢')
        else:
            print('[' + str(numb) + ']', data['items'][i]['first_name'], data['items'][i]['last_name'])
    name = input()
    try:
        name = int(name)
    except ValueError:
        menu()
    data = vk.friends.get(order=set_order, count=set_fr, fields='nickname', name_case='ins')
    print(data['items'][int(name) - 1]['id'])
    print("–î–∏–∞–ª–æ–≥ —Å", data['items'][name - 1]['first_name'], data['items'][name - 1]['last_name'],". –ü–∏—à–∏ '/back' —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è")
    vk.messages.markAsRead(peer_id= data['items'][name - 1]['id'])
    id = data['items'][name - 1]['id']
    msg = vk.messages.getHistory(user_id=id, rev=0, count = set_mes)
    n_mes = 0
    if msg['count'] < set_mes:
        n_mes = msg['count']
    else:
        n_mes = set_mes
    for i in range(n_mes):
        coef = n_mes - 1 - i
        try:
            if msg['items'][coef]['attachments'][0]['type'] == 'audio_message' and msg['items'][coef]['out'] == 1:
                print('–í—ãüé§:' + msg['items'][coef]['attachments'][0]['audio_message']['transcript'])
                i += 1
            if msg['items'][coef]['attachments'][0]['type'] == 'audio_message':
                print('üé§:' + msg['items'][coef]['attachments'][0]['audio_message']['transcript'])
                i += 1
        except IndexError:
            i += 1
            if msg['items'][coef]['out'] == 1:
                print('–í—ã: ' + msg['items'][coef]['text'])
            else:
                print(msg['items'][coef]['text'])
    text = input()
    while True:
        if text != "/back" and text != "" and text != '/rfr' and text != '/menu':
            vk.messages.send(user_id=id, random_id=0, message=text)
            text = input()
        elif text == '/rfr':
            msg = vk.messages.getHistory(peer_id=id, rev=0)
            if msg['count'] < set_mes:
                i = 0
                for i in range(msg['count']):
                    coef = msg['count'] - 1 - i
                    if msg['items'][coef]['out'] == 1:
                        print('–í—ã: ' + msg['items'][coef]['text'])
                    else:
                        print(msg['items'][coef]['text'])
            else:
                for i in range(set_mes):
                    coef = set_mes - 1 - i
                    print(coef)
                    if msg['items'][coef]['out'] == 1:
                        print('–í—ã: ' + msg['items'][coef]['text'])
                    else:
                        print(msg['items'][coef]['text'])
            text = input()
        elif text == '/menu':
            menu()
        else:
            message()


def delay():
    shorts = []
    sh = input('Enter short name(id)')
    while sh != "STOP":
        if sh == '/menu':
            menu()
            break
        shorts.append(sh)
        sh = input('Keep on entering ids. Enter "STOP" to stop')
    names = vk.users.get(user_ids=shorts, name_case='dat')
    ids = []  # –º–∞—Å—Å–∏–≤ c id —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ª—é–¥–µ–π
    for i in range(len(shorts)):
        ids.append(names[i]['id'])
    print(ids)
    text = input('Enter message text')
    first = []
    last = []
    for i in range(len(ids)):
        first.append(names[i]['first_name'])
        last.append(names[i]['last_name'])

    day = int(input('Enter date'))
    month = int(input('Enter month'))
    year = int(input('Enter year'))
    hour = int(input('Enter hour'))
    minute = int(input('Enter minute'))

    print("Are you thure that you want to send", text, "to", last, 'at', str(hour) + ':' + str(minute),
          str(day) + '.' + str(month) + '.' + str(year))
    conf = input('(y/n)?')
    if conf == 'y':
        while True:
            struct = time.localtime()
            y = struct.tm_year
            m = struct.tm_mon
            d = struct.tm_mday
            h = struct.tm_hour
            minu = struct.tm_min
            print('Waiting...')
            if year <= y and month <= m and day <= d and hour <= h and minute <= minu:
                for i in range(len(ids)):
                    vk.messages.send(user_id=ids[i], random_id=0, message=text)
                print("Message was sent.")
                menu()
            time.sleep(10)
    else:
        menu()

menu()
input()
